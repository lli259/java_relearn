// to make sure that "sensitive" data is hidden from users
//declare class variables/attributes as private (only accessible within the same class)
//provide public setter and getter methods to access and update the value of a private variable
/*
Why?
Better control of class attributes and methods
Class variables can be made read-only (if you omit the set method), or write-only (if you omit the get method)
Flexible: the programmer can change one part of the code without affecting other parts
Increased security of data
*/

public class Person {
  private String name; // private = restricted access

  // Getter
  public String getName() {
    return name;
  }

  // Setter
  public void setName(String newName) {
    this.name = newName; //this keyword is used to refer to the current object.
  }
}



public class MyClass {
  public static void main(String[] args) {
    Person myObj = new Person();
    myObj.name = "John";  // error
    System.out.println(myObj.name); // error  
  }
}


public class MyClass {
  public static void main(String[] args) {
    Person myObj = new Person();
    myObj.setName("John"); // Set the value of the name variable to "John"
    System.out.println(myObj.getName());
  }
}

