Time API: java.time 

LocalDate	Represents a date (year, month, day (yyyy-MM-dd))
LocalTime	Represents a time (hour, minute, second and microsecond (HH-mm-se-zzz))
LocalDateTime	Represents both a date and a time (yyyy-MM-dd-HH-mm-ss.zzz)
DateTimeFormatter	Formatter for displaying and parsing date-time objects


//import LocalDate Class and use now() method to return a LocalDate object.
import java.time.LocalDate; // import the LocalDate class

public class MyClass { 
  public static void main(String[] args) { 
    LocalDate myObj = LocalDate.now(); // Create a date object
    System.out.println(myObj); // Display the current date
  } 
}


import java.time.LocalTime; // import the LocalTime class

public class MyClass { 
  public static void main(String[] args) { 
    LocalTime myObj = LocalTime.now();
    System.out.println(myObj);
  } 
}

import java.time.LocalDateTime; // Import the LocalDateTime class
import java.time.format.DateTimeFormatter; // Import the DateTimeFormatter class

public class MyClass {
  public static void main(String[] args) { 
    LocalDateTime myDateObj = LocalDateTime.now(); 
    System.out.println("Before formatting: " + myDateObj); 
    DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss"); 

    String formattedDate = myDateObj.format(myFormatObj); 
    System.out.println("After formatting: " + formattedDate); 
  } 
}


yyyy-MM-dd	"1988-09-29"	
dd/MM/yyyy	"29/09/1988"	
dd-MMM-yyyy	"29-Sep-1988"	
E, MMM dd yyyy	"Thu, Sep 29 1988"
